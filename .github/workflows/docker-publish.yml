name: Publish to DockerHub

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'
  release:
    types: [created]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
      version: ${{ steps.meta.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: communityfirst/mapgl-tile-renderer
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Docker Hub Description
        if: github.event_name == 'release'
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: communityfirst/mapgl-tile-renderer
          short-description: 'Node.js MapGL renderer for styled raster tiles in MBTiles format.'
  test-docker-image:
    needs: build-and-deploy
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        style: [self, bing, esri, mapbox, planet, protomaps]
        include:
          - style: self
            command: "--style self --stylelocation tests/fixtures/alert/style-with-geojson.json --stylesources tests/fixtures/alert/sources"
            apikey_secret: ""
          - style: bing
            command: "--style bing"
            apikey_secret: ""
          - style: esri
            command: "--style esri --overlay '{\"type\": \"FeatureCollection\", \"name\": \"alert\", \"features\": [{\"geometry\": {\"coordinates\": [[[-54.25348208981326, 3.140689896338671], [-54.25348208981326, 3.140600064810259], [-54.253841415926914, 3.140600064810259], [-54.25348208981326, 3.140689896338671]]], \"geodesic\": false, \"type\": \"Polygon\"}, \"id\": \"-603946+34961\", \"properties\": {\"month_detec\": \"09\", \"year_detec\": \"2023\"}, \"type\": \"Feature\"}]}'"
            apikey_secret: ""
          - style: mapbox
            command: "--style mapbox"
            apikey_secret: MAPBOX_API_KEY
          - style: planet
            command: "--style planet --monthyear 2013-12"
            apikey_secret: PLANET_API_KEY
          - style: protomaps
            command: "--style protomaps"
            apikey_secret: PROTOMAPS_API_KEY
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up environment variables for API key and Mapbox style
        run: |
          if [ "${{ matrix.apikey_secret }}" != "" ]; then
            echo "APIKEY=${{ secrets[matrix.apikey_secret] }}" >> $GITHUB_ENV
          fi
          if [ "${{ matrix.style }}" == "mapbox" ]; then
            echo "MAPBOX_STYLE=${{ secrets.MAPBOX_STYLE }}" >> $GITHUB_ENV
          fi
      - name: Test run of Docker image with ${{ matrix.style }} style
        run: |
          docker run --rm -v ${{ github.workspace }}/outputs:/app/outputs ${{ needs.build-and-deploy.outputs.tags }} ${{ matrix.command }} --bounds "-54.28772,3.11460,-54.03630,3.35025" -Z ${{ matrix.style == 'planet' && '5' || '10' }} -f ${{ matrix.style }}-${{ needs.build-and-deploy.outputs.version }} ${{ env.MAPBOX_STYLE && '--mapboxstyle' || '' }} ${{ env.MAPBOX_STYLE || '' }} ${{ env.APIKEY && '--apikey' || '' }} ${{ env.APIKEY || '' }}
      - name: Install mbview and render tiles
        run: |
          npm install -g @mapbox/mbview
          MAPBOX_ACCESS_TOKEN=${{ secrets.MAPBOX_API_KEY }} mbview --port 9000 outputs/*.mbtiles &
          sleep 10
      - name: Screenshot rendered tile
        uses: swinton/screenshot-website@v1.x
        with:
          source: http://localhost:9000
          destination: ouputs/${{ matrix.style }}-${{ needs.build-and-deploy.outputs.version }}.png
          full-page: true
      - name: Upload mbtiles artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mbtiles-${{ needs.build-and-deploy.outputs.version }}
          path: outputs/*.{mbtiles,png}
          if-no-files-found: error # 'warn' or 'ignore' are also available, 'error' will fail the step
          retention-days: ${{ github.event_name == 'release' && 90 || 15 }}
